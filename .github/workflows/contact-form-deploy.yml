name: Deploy Contact Form

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/functions/contact-form/**"
      - ".github/workflows/contact-form-deploy.yml"
      - "infra/mailer.tf"
  pull_request:
    branches: [main]
    paths:
      - "backend/functions/contact-form/**"
      - ".github/workflows/contact-form-deploy.yml"
      - "infra/mailer.tf"

env:
  GO_VERSION: "1.21"
  AWS_REGION: "eu-central-1"
  FUNCTION_NAME: "contact-form"

jobs:
  # Test the Go code
  test:
    name: Test Go Code
    runs-on: ubuntu-latest
    environment: production

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/functions/contact-form/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        working-directory: backend/functions/contact-form
        run: make deps

      - name: Run tests
        working-directory: backend/functions/contact-form
        run: make test

      - name: Run linter
        working-directory: backend/functions/contact-form
        run: make lint

      - name: Format check
        working-directory: backend/functions/contact-form
        run: make fmt

  # Build and deploy (only on main branch)
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/functions/contact-form/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/astro-backend-cicd-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and Deploy Lambda
        working-directory: backend/functions/contact-form
        run: make update-lambda

      - name: Test deployed API
        run: |
          echo "Testing deployed API endpoint..."

          # Test OPTIONS (CORS)
          echo "1. Testing CORS preflight..."
          curl -f -X OPTIONS "https://$(aws apigateway get-rest-apis --query "items[?name=='contact-form-api'].id" --output text).execute-api.eu-central-1.amazonaws.com/prod/contact" \
            -H "Access-Control-Request-Method: POST" \
            -H "Access-Control-Request-Headers: Content-Type" \
            -i | grep -i "access-control-allow-origin"

          # Get API endpoint
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='contact-form-api'].id" --output text)
          API_URL="https://${API_ID}.execute-api.eu-central-1.amazonaws.com/prod/contact"
          echo "API Endpoint: ${API_URL}"

      - name: Post deployment summary
        run: |
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='contact-form-api'].id" --output text)
          API_URL="https://${API_ID}.execute-api.eu-central-1.amazonaws.com/prod/contact"

          echo "## 🚀 Contact Form Lambda Deployed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### API Endpoint:" >> $GITHUB_STEP_SUMMARY
          echo "- **Contact Form:** ${API_URL}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Features:" >> $GITHUB_STEP_SUMMARY
          echo "- ✉️ Sends formatted emails via AWS SES" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 Supports both contact and sell-car forms" >> $GITHUB_STEP_SUMMARY
          echo "- 🛡️ Rate limited to prevent spam" >> $GITHUB_STEP_SUMMARY
          echo "- 🎨 Beautiful HTML email templates" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Email Configuration:" >> $GITHUB_STEP_SUMMARY
          echo "- **Sender:** info@dennisdiepolder.com" >> $GITHUB_STEP_SUMMARY
          echo "- **Recipient:** info@dennisdiepolder.com" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚠️ Important:" >> $GITHUB_STEP_SUMMARY
          echo "info@dennisdiepolder.com must be verified in AWS SES before emails can be sent!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Function:** ${{ env.FUNCTION_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runtime:** provided.al2023 (ARM64)" >> $GITHUB_STEP_SUMMARY
          echo "- **Memory:** 128MB" >> $GITHUB_STEP_SUMMARY
          echo "- **Timeout:** 30s" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
